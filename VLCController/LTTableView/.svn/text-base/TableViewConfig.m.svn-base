//
//  TableViewConfig.m
//  LedController
//
//  Created by Mojy on 2017/6/14.
//  Copyright © 2017年 com.ledController.app. All rights reserved.
//

#import "TableViewConfig.h"

@interface TableViewConfig ()

@property (nonatomic, copy) NSString* cellIdentigier;
@property (nonatomic, copy) TableViewCellConfigureBlock configureCellBlock;
@property (nonatomic, copy) TableViewCellDidSelectBlock didSelectBlock;
@property (nonatomic, copy) TableViewCellHeightBlock heightBlock;
@property (nonatomic, copy) TableViewCellRegisterClassBlock registerBlock;

@end

@implementation TableViewConfig

- (id)initWithItems:(NSArray *)aItems
     cellIdentifier:(NSString *)aIdentifier
 configureCellBlock:(TableViewCellConfigureBlock)aConfigureCellBlock
    cellHeightBlock:(TableViewCellHeightBlock)aHeightBlock
     didSelectBlock:(TableViewCellDidSelectBlock)aDidSelectBlock
{
    self = [super init];
    if (self) {
        self.items = aItems;
        self.cellIdentigier = aIdentifier;
        self.configureCellBlock = aConfigureCellBlock;
        self.heightBlock = aHeightBlock;
        self.didSelectBlock = aDidSelectBlock;
    }
    return self;
}

/**
 初始化，cell为纯代码方式
 
 @param aItems 数据源
 @param aRegisterBlock 注册Cell的Block，可以实现多个Cell样式，为nil则为默认的样式
 @param aConfigureCellBlock Cell赋值的Block
 @param aHeightBlock Cell高度Block
 @param aDidSelectBlock Cell 选中Block
 @return 实例
 */
- (id)initWithItems:(NSArray *)aItems
  registerCellBlock:(TableViewCellRegisterClassBlock)aRegisterBlock
 configureCellBlock:(TableViewCellConfigureBlock)aConfigureCellBlock
    cellHeightBlock:(TableViewCellHeightBlock)aHeightBlock
     didSelectBlock:(TableViewCellDidSelectBlock)aDidSelectBlock
{
    self = [super init];
    if (self) {
        self.items = aItems;
        self.registerBlock = aRegisterBlock;
        self.configureCellBlock = aConfigureCellBlock;
        self.heightBlock = aHeightBlock;
        self.didSelectBlock = aDidSelectBlock;
        self.cellSpace = 10;
    }
    return self;
}

- (void)handleTableViewDataSourceAndDelegate:(UITableView *)aTableView
{
    aTableView.delegate = self;
    aTableView.dataSource = self;
    aTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
}

- (id)itemAtIndexPath:(NSIndexPath*)indexPath
{
    return self.items[(NSUInteger)indexPath.row];
}

#pragma mark - UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.items.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CGFloat cellHeight = 44;
    id item = [self itemAtIndexPath:indexPath];
    if (self.heightBlock) {
        cellHeight = self.heightBlock(indexPath, item);
    }
    else {
        return [UITableViewCell getCellHeightWitCustomObj:item indexPath:indexPath];
    }
    
    cellHeight += self.cellSpace;
    
    return cellHeight;
}

- (CGFloat)tableView:(UITableView *)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (self.sectionHeaderHeightBlock) {
        return self.sectionHeaderHeightBlock(section, nil);
    }
    else {
        return 0.01;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (self.sectionFooterHeightBlock) {
        return self.sectionFooterHeightBlock(section, nil);
    }
    else {
        return 0.01;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    id item = [self itemAtIndexPath:indexPath];
    
    UITableViewCell *cell;
    if (self.registerBlock) {
        cell = self.registerBlock(tableView, indexPath, item);
    }
    else {

        static NSString *cellIdentifier = @"Cell Identifier";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:self.cellIdentigier ? self.cellIdentigier : cellIdentifier];
        if (!cell) {
            //使用xib的方式
            if (self.cellIdentigier) {
                [UITableViewCell registerTabelView:tableView nibIdentifier:self.cellIdentigier];
                cell = [tableView dequeueReusableCellWithIdentifier:self.cellIdentigier];
            }
            else {
                cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifier];
            }
            
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
        }
    }
    
    return cell;
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    id item = [self itemAtIndexPath:indexPath];
    if (self.configureCellBlock) {
        self.configureCellBlock(indexPath,cell,item);
    }
}

#pragma mark - UITableViewDelegate
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    id item = [self.items objectAtIndex:indexPath.row];
    id cell = [tableView cellForRowAtIndexPath:indexPath];
    if (self.didSelectBlock) {
        self.didSelectBlock(indexPath, cell, item);
    }
}

@end
